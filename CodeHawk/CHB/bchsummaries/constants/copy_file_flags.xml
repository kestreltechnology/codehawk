<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="03/10/2015 12:38:43"/>
  <symbolic-constants type="copy_file_flags">
    <type>copy_file_flags</type>
    <values>
      <symf name="COPY_FILE_ALLOW_DECRYPTED_DESTINATION" value="0x00000008">
	<desc>
	  An attempt to copy an encrypted file will succeed even if the destination copy 
	  cannot be encrypted
	</desc>
      </symf>
      <symf name="COPY_FILE_COPY_SYMLINK" value="0x00000800">
	<desc>
	  If the source file is a symbolic link, the destination file is also a symbolic
	  link pointing to the same file that the source symbolic link is pointing to.
	</desc>
      </symf>
      <symf name="COPY_FILE_FAIL_IF_EXISTS" value="0x00000001">
	<desc>The copy operation fails immediately if the target file already exists</desc>
      </symf>
      <symf name="COPY_FILE_NO_BUFFERING" value="0x00001000">
	<desc>
	  The copy operation is performed using unbuffered I/O, bypassing system I/O cache 
	  resources. Recommended for very large file transfers.
	</desc>
      </symf>
      <symf name="COPY_FILE_OPEN_SOURCE_FOR_WRITE" value="0x00000004">
	<desc>The file is copied and the original file is opened for write access</desc>
      </symf>
      <symf name="COPY_FILE_RESTARTABLE" value="0x00000002">
	<desc>
	  Progress of the copy is tracked in the target file in case the copy fails. The 
	  failed copy can be restarted at a later time by specifying the same values for 
	  lpExistingFileName and lpNewFileName as those used in the call that failed. 
	  This can significantly slow down the copy operation as the new file may be 
	  flushed multiple times during the copy operation.
	</desc>
      </symf>
    </values>
  </symbolic-constants>
  <copyright-notice>Copyright 2012-2015, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
