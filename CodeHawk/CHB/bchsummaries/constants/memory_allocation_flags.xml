<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <header name="hresult" creation-date="2015-02-28" last-revision="2015-03-01">
    <reference href="http://msdn.microsoft.com/"/>
  </header>
  <symbolic-constants type="memory_allocation_flags">
    <type>memory_allocation_flags</type>
    <values>
    <symf name="MEM_COMMIT" value="0x00001000">
      <desc>
	Allocates memory charges (from the overall size of memory and the paging 
	files on disk) for the specified reserved memory pages. The function also
	guarantees that when the caller later initially accesses the memory, the 
	contents will be zero. Actual physical pages are not allocated 
	unless/until the virtual addresses are actually accessed.
      </desc>
    </symf>
    <symf name="MEM_RESERVE" value="0x00002000">
      <desc>
	Reserves a range of the process's virtual address space without allocating 
	any actual physical storage in memory or in the paging file on disk.
      </desc>
    </symf>
    <symf name="MEM_RESET" value="0x00080000">
      <desc>
	Indicates that data in the memory range specified by lpAddress and dwSize
	is no longer of interest. The pages should not be read from or written to
	the paging file. However, the memory block will be used again later, so 
	it should not be decommitted. This value cannot be used with any other 
	value.
      </desc>
    </symf>
    <symf name="MEM_RESET_UNDO" value="0x1000000">
      <desc>
	MEM_RESET_UNDO should only be called on an address range to which
	MEM_RESET was successfully applied earlier. It indicates that the 
	data in the specified memory range specified by lpAddress and dwSize 
	is of interest to the caller and attempts to reverse the effects of
	MEM_RESET. If the function succeeds, that means all data in the 
	specified address range is intact. If the function fails, at 
	least some of the data in the address range has been replaced with 
	zeroes.
      </desc>
    </symf>
    <symf name="MEM_LARGE_PAGES" value="0x20000000">
      <desc>Allocates memory using large page support</desc>
    </symf>
    <symf name="MEM_PHYSICAL" value="0x00400000">
      <desc>
	Reserves an address range that can be used to map Address Windowing 
	Extensions (AWE) pages.
      </desc>
    </symf>
    <symf name="MEM_TOP_DOWN" value="0x00100000">
      <desc>
	Allocates memory at the highest possible address. This can be slower 
	than regular allocations, especially when there are many allocations.
      </desc>
    </symf>
    <symf name="MEM_WRITE_WATCH" value="0x00200000">
      <desc>
	Causes the system to track pages that are written to in the allocated 
	region. If you specify this value, you must also specify MEM_RESERVE.
      </desc>
    </symf>
    </values>
  </symbolic-constants>
</codehawk-binary-analyzer>
