<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <reference href="http://pubs.opengroup.org/onlinepubs/000095399/"/>
  <header date="2020-12-31 22:57:17"/>
  <libfun lib="so_functions" name="dlsym">
    <documentation>
      <desc>get the address of a symbol from a symbol table handle</desc>
      <apidoc>
        <pt>
          <ll>void *dlsym(</ll>
          <ld>void *restrict handle,</ld>
          <ld>const char *name</ld>
          <ll>)</ll>
        </pt>
        <par name="handle">
	  symbol table handle returned from a call to dlopen() (and
	  which has not since been released by a call to dlclose())
	</par>
        <par name="name">
	  the symbol's name as a character string
	</par>
        <return>
          <rc cond="success">
	    if name names a function identifier, dlsym() shall return
	    the address of the function converted from type pointer to
	    function to type pointer to void; otherwise, dlsym() shall
	    return the address of the data object associated with the
	    data object identifier named by name converted from a
	    pointer to the type of the data object to a pointer to
	    void
	  </rc>
          <rc cond="failure">NULL</rc>
        </return>
      </apidoc>
    </documentation>
    <api adj="0" cc="cdecl" name="dlsym">
      <par loc="stack" name="handle" nr="1">
	<pre><deref-read/></pre>
        <type><ptr>void</ptr></type>
      </par>
      <par loc="stack" name="name" nr="2">
	<pre><deref-read/></pre>
        <type><ptr>char</ptr></type>
      </par>
      <returntype><ptr>void</ptr></returntype>
    </api>
    <semantics>
      <io-actions/>
      <preconditions/>
      <postconditions/>
      <sideeffects/>
    </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2020, Henny Sipma, Palo Alto, CA 94304</copyright-notice>
</codehawk-binary-analyzer>
